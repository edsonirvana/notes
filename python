Open 
#SOBRE A LINGUAGEM
ORIENTADO A OBJETO
ATRIBUTOS PROPRIEDADES E MÉTODOS

objeto.atributo
objeto.método()
objeto.método(parâmetros) método é uma função
parâmetros são argumentos extras que podemos passar para o método


#INDEXACAO
USAMOS COLCHETES PARA REPRESENTAR O ÍNDICE DE UM OBJETO
colchetes[]

A indexação começa por 0 ZERO

Se quer pegar a segunda posição de um índice
o índice é 1 (0,1(segunda posição) ,2)

CHAMANDO UMA POSICAO NUMA STRING VIA ÍNDICE:

texto="String"

texto[0] = S
texto[1] = t


#TRANSFORMAR EM MAIUSCULA e MINUSCULA métodos
texto.upper()
texto.lower()


#SPLIT 
texto="String String String" # faz a divisao por caracter, se deixar em branco faz  divisão por espaço em branco
texto.split()
saída: ['String', 'String', 'String']

texto.split("S") #divisao por caracter S
saída: ['', 'tring ', 'tring ', 'tring']


#SLICING
texto="String" 
texto[1:] # retornará os caracteres da 1 (incluir a posição 1) em diante (tudo a partir da posição 01)
saída: 'tring'

texto[:3] # tudo a posição 2 (exclui a posição 3), ou seja antes da posição 3 de trás pra frente
saída: 'ing'

texto[:3] # tudo até a posição 3
saída: 'ing'

#FUNCOES STRING
texto="string string string"
texto.capitalize()          #altera a primeira letra para Maiúscula
>'String string string'"

texto.count('i') #conta quantas vezes o argumento aparece na string
>3

texto.find('i') #encontra a posição do argumento na string
>3

texto.islower() #verifica se o texto da sring é todo minúsculo
True

texto.isspace() #verifica se a string possui apenas espaço
False

texto.endswith('i') #verifica se a string termina com o argumento
False

print("String1" == "String2") #compara duas strings
False

#IMRIMINDO STRING COM QUEBRA DE LINHA
texto="String \n String"
print(texto)
saída:
String 
 String

#FUNÇÕES BUILT IN, FUNÇÕES QUE JÁ VEM NO PYTHON
abs(-8) retira o simbolo negativo e retorna  valor absoluto > 8
round(3.1415,2) arredonda indicando quantas casa decimais( neste caso 2
, se deixar vazio arrendona com zero casas decimais) > 3.14

pow(4,2) elevar a POTENCIA


#VERIFICAR TIPO DE UM OBJETO
type()
pode ser usado assim type(varivavel)
ou type(5.2)
ou type('string')


#OPERAÇÕES COM NÚMEROS
+ SOMA
- SUBTRAÇÃO
* MULTIPLAÇÃO
/ DIVISÃO RETORNANDO FLOAT
// DIVISÃO RETORNANDO INT COM DOS INT, SE UM FO FLOAT, RETORNA FLOAT
% MÓDULO
** POTENCIA

== igualdade/equivalência
!= DESIGUALDADE/DIFERENTE/INEQUIVALÊNCIA
> MAIOR QUE
< MENOR QUE
>= MAIOR OU IGUAL A
<= MENOR OU IGUAL A

= Atribuição
+= Soma, Z += 10 equivale a z = z +10
-= Subtração
*= Multiplicação
/= Divisão z /= 10 equivale a Z = Z /10
%= Módulo
**= POTENCIA
//= Divisao inteira

int() converte para numero inteiro int(3.2) > 3
float() converte para float(2) > 2.0

hex(1) converte para número hexadecimal
bin(1) converte para binário


#CONCATENAR VARIÁVEIS DO TIPO STRING E INT
variavelconcatenada = variavel01 + variavel02 
neste caso não soma, pois é string.


#OPERADORES LÓGICOS E ESTRUTURAIS
and, or, not

=, ==, if, :, print()

= atribuição de valor a variável
idade = 10
idade, ano, mes, dia = 45,1930,12,19
idade = idade2 = idade3 = 45

== condição de igual (se tal coisa é igual) usa-se
if idade == 10

: determina ação a seguir
idade = 1o
if idade == 10:
print("Idade igual a 10)


#IF E ELIF
ELIF:
Funciona como um segundo IF dentro do primeito IF, se você quer fazer
dois IF's antes do ELSE, pode usar ELIF:
IF condição 01:
  ação 01
ELIF condição 02:
  ação 03
ELSE:
  ação genérica final
  
INPUT solicita ao usuário que entre com algum valor
variavel01 = input('Digite o valor da variavel')

o valor digitado virá em string, para converter para inteiro usar int
INT(variavel01)

place holder
imprime o valor de uma variável num texto
print('Você digitou a variável %s e %r!' %(varivavel01,variavel02))


#RETORNANDO O ANO ATUAL
from datetime import date
date = date.today()
year=date.year
name = input("Digite seu nome ")
birth_year = input("Digite seu ano de nascimento: ")
age = int(year)-int(birth_year)
print(name, "Sua idade é: ", age)

number01 = input("Digite o primeiro número ")
number02 = input("Digite o segundo número ")
print(float(number01)+float(number02))


#CODE E ENCODE UTF-8
s='édson'
b=s.encode('utf8')
print(b)
i='é'
d=i.encode('utf8')
print(d)
type(i)
e=d.decode('utf8')
print(e)


#função para percentual dando input de dois números
v1 = input("v1")
v2 = input("v2")
v11 = int(v1)
v12 = int(v2)

def percentual(valor1, valor2):
    resultado = (valor1 / valor2) * 100
    print(valor1, 'representa', resultado, '% de', valor2)

percentual(v11, v12)


#PANDAS
# LENDO .CSV ou .XLSX COM PANDAS
import pandas as pd
origem_governo = pd.read_csv('arquivonapastaquevairodarocodigo.csv', sep = ';', encoding = 'utf-8')

ou

tabela1 = pd.read_excel("caminho")
tabela2 = pd.read_excel("caminho")

tabela3 = tabela1.merge(tabela2, left_on="Chave", right_on="Chave")

print(tabela3)


#ESTRUTURA DE DADOS

#LISTAS

#






#!/bin/python3

import math
import os
import random
import re
import sys


#
# Complete the 'clean_and_sort_string_array' function below.
#
# The function is expected to return a STRING_ARRAY.
# The function accepts STRING_ARRAY my_array as parameter.
#

def clean_and_sort_string_array(my_array):
    # Write your code here
    
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    my_array_count = int(input().strip())

    my_array = []

    for _ in range(my_array_count):
        my_array_item = input()
        my_array.append(my_array_item)

    result = clean_and_sort_string_array(my_array)

    fptr.write('\n'.join(result))
    fptr.write('\n')

    fptr.close()

  if __name__ == '__main__':
    n = int(input())
if n % 2 != 0:
    print('Weird')
if n % 2 == 0:
    if n >= 2 and n <=5: 
        print('Not weird')
    if n >= 6 and n <=20: 
        print('Weird')
    if n >20: 
        print('Not Weird')
        open()
open()
open()
open()
open()
open()
open()
open()